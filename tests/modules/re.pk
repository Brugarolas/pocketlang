import re

def rerange(pattern, text, flag)
  result = ""
  for r in re.range(pattern, text, flag)
    if r
      result += "(${r.first},${r.last})"
    else
      result += "(?,?)"
    end
  end
  return result
end

def check(pattern, text, result)
  assert(rerange(pattern, text, 0) == result)
end

def checki(pattern, text, result)
  assert(rerange(pattern, text, re.I) == result)
end

def checku(pattern, text, result)
  assert(rerange(pattern, text, re.U) == result)
end

def test1
  check(r"\d", "5", "(0,1)")
  check(r"\w+", "hej", "(0,3)")
  check(r"\s", "\t \n", "(0,1)")
  check(r"\S", "\t \n", "")
  check(r"[\s]", "\t \n", "(0,1)")
  check(r"[\S]", "\t \n", "")
  check(r"\D", "5", "")
  check(r"\W+", "hej", "")
  check(r"[0-9]+", "12345", "(0,5)")
  check(r"\D", "hej", "(0,1)")
  check(r"\d", "hej", "")
  check(r"[^\w]", "\\", "(0,1)")
  check(r"[\W]", "\\", "(0,1)")
  check(r"[\w]", "\\", "")
  check(r"[^\d]", "d", "(0,1)")
  check(r"[\d]", "d", "")
  check(r"[^\D]", "d", "")
  check(r"[\D]", "d", "(0,1)")
  check(r"^.*\\.*$", "c:\\Tools", "(0,8)")
  check(r"^[\+-]*[\d]+$", "+27", "(0,3)")
  check(r"[abc]", "1c2", "(1,2)")
  check(r"[abc]", "1C2", "")
  check(r"[1-5]+", "0123456789", "(1,6)")
  check(r"[.2]", "1C2", "(2,3)")
  check(r"a*$", "Xaa", "(1,3)")
  check(r"a*$", "Xaa", "(1,3)")
  check(r"[a-h]+", "abcdefghxxx", "(0,8)")
  check(r"[a-h]+", "ABCDEFGH", "")
  check(r"[A-H]+", "ABCDEFGH", "(0,8)")
  check(r"[A-H]+", "abcdefgh", "")
  check(r"[^\s]+", "abc def", "(0,3)")
  check(r"[^fc]+", "abc def", "(0,2)")
  check(r"[^d\sf]+", "abc def", "(0,3)")
  check(r"\n", "abc\ndef", "(3,4)")
  check(r"b.\s*\n", "aa\r\nbb\r\ncc\r\n\r\n", "(4,8)")
  check(r".*c", "abcabc", "(0,6)")
  check(r".+c", "abcabc", "(0,6)")
  check(r"[b-z].*", "ab", "(1,2)")
  check(r"b[k-z]*", "ab", "(1,2)")
  check(r"[0-9]", " - ", "")
  check(r"[^0-9]", " - ", "(0,1)")
  check(r"0\|", "0|", "(0,2)")
  check(r"\d\d:\d\d:\d\d", "0s:00:00", "")
  check(r"\d\d:\d\d:\d\d", "000:00", "")
  check(r"\d\d:\d\d:\d\d", "00:0000", "")
  check(r"\d\d:\d\d:\d\d", "100:0:00", "")
  check(r"\d\d:\d\d:\d\d", "00:100:00", "")
  check(r"\d\d:\d\d:\d\d", "0:00:100", "")
  check(r"\d\d?:\d\d?:\d\d?", "0:0:0", "(0,5)")
  check(r"\d\d?:\d\d?:\d\d?", "0:00:0", "(0,6)")
  check(r"\d\d?:\d\d?:\d\d?", "0:0:00", "(0,6)")
  check(r"\d\d?:\d\d?:\d\d?", "00:0:0", "(0,6)")
  check(r"\d\d?:\d\d?:\d\d?", "00:00:0", "(0,7)")
  check(r"\d\d?:\d\d?:\d\d?", "00:0:00", "(0,7)")
  check(r"\d\d?:\d\d?:\d\d?", "0:00:00", "(0,7)")
  check(r"\d\d?:\d\d?:\d\d?", "00:00:00", "(0,8)")
  check(r"[Hh]ello [Ww]orld\s*[!]?", "Hello world !", "(0,13)")
  check(r"[Hh]ello [Ww]orld\s*[!]?", "hello world !", "(0,13)")
  check(r"[Hh]ello [Ww]orld\s*[!]?", "Hello World !", "(0,13)")
  check(r"[Hh]ello [Ww]orld\s*[!]?", "Hello world! ", "(0,12)")
  check(r"[Hh]ello [Ww]orld\s*[!]?", "Hello world !", "(0,13)")
  check(r"[Hh]ello [Ww]orld\s*[!]?", "hello World !", "(0,13)")
  check(r"\d\d?:\d\d?:\d\d?", "a:0", "")
  check(r"[^\w][^-1-4]", ")T", "(0,2)")
  check(r"[^\w][^-1-4]", ")^", "(0,2)")
  check(r"[^\w][^-1-4]", "*)", "(0,2)")
  check(r"[^\w][^-1-4]", "!.", "(0,2)")
  check(r"[^\w][^-1-4]", " x", "(0,2)")
  check(r"[^\w][^-1-4]", r"$b", "(0,2)")
  check(r".?bar", "real_bar", "(4,8)")
  check(r".?bar", "real_foo", "")
  check(r"X?Y", "Z", "")
  check(r"[a-z]+\nbreak", "blahblah\nbreak", "(0,14)")
  check(r"[a-z\s]+\nbreak", "bla bla \nbreak", "(0,14)")
end

def test2
  check(r"abracadabra$", "abracadabracadabra", "(7,18)")
  check(r"a...b", "abababbb", "(2,7)")
  check(r"XXXXXX", "..XXXXXX", "(2,8)")
  check(r"\)", "()", "(1,2)")
  check(r"a]", "a]a", "(0,2)")
  check(r"}", "}", "(0,1)")
  check(r"\}", "}", "(0,1)")
  check(r"\]", "]", "(0,1)")
  check(r"\[", "[", "(0,1)")
  check(r"]", "]", "(0,1)")
  check(r"\{", "{", "(0,1)")
  check(r"}", "}", "(0,1)")
  check(r"^a", "ax", "(0,1)")
  check(r"\^a", "a^a", "(1,3)")
  check(r"a\^", "a^", "(0,2)")
  check(r"a$", "aa", "(1,2)")
  check(r"a\$", r"a$", "(0,2)")
  check(r"^$", "", "(0,0)")
  check(r"$^", "", "(0,0)")
  check(r"a($)", "aa", "(1,2)(2,2)")
  check(r"a*(^a)", "aa", "(0,1)(0,1)")
  check(r"(..)*(...)*", "a", "(0,0)(?,?)(?,?)")
  check(r"(..)*(...)*", "abcd", "(0,4)(2,4)(?,?)")
  check(r"(ab|a)(bc|c)", "abc", "(0,3)(0,2)(2,3)")
  check(r"(ab)c|abc", "abc", "(0,3)(0,2)")
  check(r"a{0}b", "ab", "(1,2)")
  check(r"(a*)(b?)(b+)b{3}", "aaabbbbbbb", "(0,10)(0,3)(3,4)(4,7)")
  check(r"(a*)(b{0,1})(b{1,})b{3}", "aaabbbbbbb", "(0,10)(0,3)(3,4)(4,7)")
  check(r"((a|a)|a)", "a", "(0,1)(0,1)(0,1)")
  check(r"(a*)(a|aa)", "aaaa", "(0,4)(0,3)(3,4)")
  check(r"a*(a.|aa)", "aaaa", "(0,4)(2,4)")
  check(r"a(b)|c(d)|a(e)f", "aef", "(0,3)(?,?)(?,?)(1,2)")
  check(r"(a|b)?.*", "b", "(0,1)(0,1)")
  check(r"(a|b)c|a(b|c)", "ac", "(0,2)(0,1)(?,?)")
  check(r"(a|b)c|a(b|c)", "ab", "(0,2)(?,?)(1,2)")
  check(r"(a|b)*c|(a|ab)*c", "abc", "(0,3)(1,2)(?,?)")
  check(r"(a|b)*c|(a|ab)*c", "xc", "(1,2)(?,?)(?,?)")
  check(r"(.a|.b).*|.*(.a|.b)", "xa", "(0,2)(0,2)(?,?)")
  check(r"a?(ab|ba)ab", "abab", "(0,4)(0,2)")
  check(r"a?(ac{0}b|ba)ab", "abab", "(0,4)(0,2)")
  check(r"ab|abab", "abbabab", "(0,2)")
  check(r"aba|bab|bba", "baaabbbaba", "(5,8)")
  check(r"aba|bab", "baaabbbaba", "(6,9)")
  check(r"(aa|aaa)*|(a|aaaaa)", "aa", "(0,2)(0,2)(?,?)")
  check(r"(a.|.a.)*|(a|.a...)", "aa", "(0,2)(0,2)(?,?)")
  check(r"ab|a", "xabc", "(1,3)")
  check(r"ab|a", "xxabc", "(2,4)")
  checki(r"(Ab|cD)*", "aBcD", "(0,4)(2,4)")
  check(r"[^-]", "--a", "(2,3)")
  check(r"[a-]*", "--a", "(0,3)")
  check(r"[a-m-]*", "--amoma--", "(0,4)")
  check(r":::1:::0:|:::1:1:0:", ":::0:::1:::1:::0:", "(8,17)")
  check(r":::1:::0:|:::1:1:1:", ":::0:::1:::1:::0:", "(8,17)")
  check(r"[[-]]", "[[-]]", "(2,4)")
  check(r"\n", "\n", "(0,1)")
  check(r"\n", "\n", "(0,1)")
  check(r"[^a]", "\n", "(0,1)")
  check(r"\na", "\na", "(0,2)")
  check(r"(a)(b)(c)", "abc", "(0,3)(0,1)(1,2)(2,3)")
  check(r"xxx", "xxx", "(0,3)")
  check(r"a?(ab|ba)*", "ababababababababababababababababababababababababababababababababababababababababa", "(0,81)(79,81)")
  check(r"abaa|abbaa|abbbaa|abbbbaa", "ababbabbbabbbabbbbabbbbaa", "(18,25)")
  check(r"abaa|abbaa|abbbaa|abbbbaa", "ababbabbbabbbabbbbabaa", "(18,22)")
  check(r"aaac|aabc|abac|abbc|baac|babc|bbac|bbbc", "baaabbbabac", "(7,11)")
  check(r".*", "\x01\x7f", "(0,2)")
  check(r"aaaa|bbbb|cccc|ddddd|eeeeee|fffffff|gggg|hhhh|iiiii|jjjjj|kkkkk|llll", "XaaaXbbbXcccXdddXeeeXfffXgggXhhhXiiiXjjjXkkkXlllXcbaXaaaa", "(53,57)")
  check("aaaa\nbbbb\ncccc\nddddd\neeeeee\nfffffff\ngggg\nhhhh\niiiii\\nkkkkk\nllll", "XaaaXbbbXcccXdddXeeeXfffXgggXhhhXiiiXjjjXkkkXlllXcbaXaaaa", "")
  check(r"a*a*a*a*a*b", "aaaaaaaaab", "(0,10)")
  check(r"^", "", "(0,0)")
  check(r"$", "", "(0,0)")
  check(r"^$", "", "(0,0)")
  check(r"^a$", "a", "(0,1)")
  check(r"abc", "abc", "(0,3)")
  check(r"abc", "xabcy", "(1,4)")
  check(r"abc", "ababc", "(2,5)")
  check(r"ab*c", "abc", "(0,3)")
  check(r"ab*bc", "abc", "(0,3)")
  check(r"ab*bc", "abbc", "(0,4)")
  check(r"ab*bc", "abbbbc", "(0,6)")
  check(r"ab+bc", "abbc", "(0,4)")
  check(r"ab+bc", "abbbbc", "(0,6)")
  check(r"ab?bc", "abbc", "(0,4)")
  check(r"ab?bc", "abc", "(0,3)")
  check(r"ab?c", "abc", "(0,3)")
  check(r"^abc$", "abc", "(0,3)")
  check(r"^abc", "abcc", "(0,3)")
  check(r"abc$", "aabc", "(1,4)")
  check(r"^", "abc", "(0,0)")
  check(r"$", "abc", "(3,3)")
  check(r"a.c", "abc", "(0,3)")
  check(r"a.c", "axc", "(0,3)")
  check(r"a.*c", "axyzc", "(0,5)")
  check(r"a[bc]d", "abd", "(0,3)")
  check(r"a[b-d]e", "ace", "(0,3)")
  check(r"a[b-d]", "aac", "(1,3)")
  check(r"a[-b]", "a-", "(0,2)")
  check(r"a[b-]", "a-", "(0,2)")
  check(r"a]", "a]", "(0,2)")
  check(r"a[\]]b", "a]b", "(0,3)")
  check(r"a[^bc]d", "aed", "(0,3)")
  check(r"a[^-b]c", "adc", "(0,3)")
  check(r"a[^\]b]c", "adc", "(0,3)")
  check(r"ab|cd", "abc", "(0,2)")
  check(r"ab|cd", "abcd", "(0,2)")
  check(r"a\(b", "a(b", "(0,3)")
  check(r"a\(*b", "ab", "(0,2)")
  check(r"a\(*b", "a((b", "(0,4)")
  check(r"((a))", "abc", "(0,1)(0,1)(0,1)")
  check(r"(a)b(c)", "abc", "(0,3)(0,1)(2,3)")
  check(r"a+b+c", "aabbabc", "(4,7)")
  check(r"a*", "aaa", "(0,3)")
  check(r"(a*)*", "-", "(0,0)(?,?)")
  check(r"(a*)+", "-", "(0,0)(0,0)")
  check(r"(a*|b)*", "-", "(0,0)(?,?)")
  check(r"(a*|b)*", "-", "(0,0)(?,?)")
  check(r"(a+|b)*", "ab", "(0,2)(1,2)")
  check(r"(a+|b)+", "ab", "(0,2)(1,2)")
  check(r"(a+|b)?", "ab", "(0,1)(0,1)")
  check(r"[^ab]*", "cde", "(0,3)")
  check(r"(^)*", "-", "(0,0)(?,?)")
  check(r"a*", "", "(0,0)")
  check(r"([abc])*d", "abbbcd", "(0,6)(4,5)")
  check(r"([abc])*bcd", "abcd", "(0,4)(0,1)")
  check(r"a|b|c|d|e", "e", "(0,1)")
  check(r"(a|b|c|d|e)f", "ef", "(0,2)(0,1)")
  check(r"((a*|b))*", "-", "(0,0)(?,?)(?,?)")
  check(r"abcd*efg", "abcdefg", "(0,7)")
  check(r"ab*", "xabyabbbz", "(1,3)")
  check(r"ab*", "xayabbbz", "(1,2)")
  check(r"(ab|cd)e", "abcde", "(2,5)(2,4)")
  check(r"[abhgefdc]ij", "hij", "(0,3)")
  check(r"(a|b)c*d", "abcd", "(1,4)(1,2)")
  check(r"(ab|ab*)bc", "abc", "(0,3)(0,1)")
  check(r"a([bc]*)c*", "abc", "(0,3)(1,3)")
  check(r"a([bc]*)(c*d)", "abcd", "(0,4)(1,3)(3,4)")
  check(r"a([bc]+)(c*d)", "abcd", "(0,4)(1,3)(3,4)")
  check(r"a([bc]*)(c+d)", "abcd", "(0,4)(1,2)(2,4)")
  check(r"a[bcd]*dcdcde", "adcdcde", "(0,7)")
  check(r"(ab|a)b*c", "abc", "(0,3)(0,2)")
  check(r"((a)(b)c)(d)", "abcd", "(0,4)(0,3)(0,1)(1,2)(3,4)")
  check(r"[A-Za-z_][A-Za-z0-9_]*", "alpha", "(0,5)")
  check(r"^a(bc+|b[eh])g|.h$", "abh", "(1,3)(?,?)")
  check(r"(bc+d$|ef*g.|h?i(j|k))", "effgz", "(0,5)(0,5)(?,?)")
  check(r"(bc+d$|ef*g.|h?i(j|k))", "ij", "(0,2)(0,2)(1,2)")
  check(r"(bc+d$|ef*g.|h?i(j|k))", "reffgz", "(1,6)(1,6)(?,?)")
  check(r"(((((((((a)))))))))", "a", "(0,1)(0,1)(0,1)(0,1)(0,1)(0,1)(0,1)(0,1)(0,1)(0,1)")
  check(r"multiple words", "multiple words yeah", "(0,14)")
  check(r"(.*)c(.*)", "abcde", "(0,5)(0,2)(3,5)")
  check(r"abcd", "abcd", "(0,4)")
  check(r"a(bc)d", "abcd", "(0,4)(1,3)")
  check(r"a[-]?c", "ac", "(0,3)")
  check(r'M[ou]"?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]', "Muammar Qaddafi", "(0,15)(?,?)(10,12)")
  check(r'M[ou]"?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]', "Mo\"ammar Gadhafi", "(0,16)(?,?)(11,13)")
  check(r'M[ou]"?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]', "Muammar Kaddafi", "(0,15)(?,?)(10,12)")
  check(r'M[ou]"?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]', "Muammar Qadhafi", "(0,15)(?,?)(10,12)")
  check(r'M[ou]"?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]', "Muammar Gadafi", "(0,14)(?,?)(10,11)")
  check(r'M[ou]"?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]', "Mu\"ammar Qadafi", "(0,15)(?,?)(11,12)")
  check(r'M[ou]"?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]', "Moamar Gaddafi", "(0,14)(?,?)(9,11)")
  check(r'M[ou]"?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]', "Mu\"ammar Qadhdhafi", "(0,18)(?,?)(13,15)")
  check(r'M[ou]"?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]', "Muammar Khaddafi", "(0,16)(?,?)(11,13)")
  check(r'M[ou]"?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]', "Muammar Ghaddafy", "(0,16)(?,?)(11,13)")
  check(r'M[ou]"?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]', "Muammar Ghadafi", "(0,15)(?,?)(11,12)")
  check(r'M[ou]"?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]', "Muammar Ghaddafi", "(0,16)(?,?)(11,13)")
  check(r'M[ou]"?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]', "Muamar Kaddafi", "(0,14)(?,?)(9,11)")
  check(r'M[ou]"?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]', "Muammar Quathafi", "(0,16)(?,?)(11,13)")
  check(r'M[ou]"?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]', "Muammar Gheddafi", "(0,16)(?,?)(11,13)")
  check(r'M[ou]"?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]', "Moammar Khadafy", "(0,15)(?,?)(11,12)")
  check(r'M[ou]"?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]', "Moammar Qudhafi", "(0,15)(?,?)(10,12)")
  check(r"a+(b|c)*d+", "aabcdd", "(0,6)(3,4)")
  check(r"^.+$", "vivi", "(0,4)")
  check(r"^(.+)$", "vivi", "(0,4)(0,4)")
  check(r"^([^!.]+).att.com!(.+)$", "gryphon.att.com!eby", "(0,19)(0,7)(16,19)")
  check(r"^([^!]+!)?([^!]+)$", "bas", "(0,3)(?,?)(0,3)")
  check(r"^([^!]+!)?([^!]+)$", "bar!bas", "(0,7)(0,4)(4,7)")
  check(r"^([^!]+!)?([^!]+)$", "foo!bas", "(0,7)(0,4)(4,7)")
  check(r"^.+!([^!]+!)([^!]+)$", "foo!bar!bas", "(0,11)(4,8)(8,11)")
  check(r"((foo)|(bar))!bas", "bar!bas", "(0,7)(0,3)(?,?)(0,3)")
  check(r"((foo)|(bar))!bas", "foo!bar!bas", "(4,11)(4,7)(?,?)(4,7)")
  check(r"((foo)|(bar))!bas", "foo!bas", "(0,7)(0,3)(0,3)(?,?)")
  check(r"((foo)|bar)!bas", "bar!bas", "(0,7)(0,3)(?,?)")
  check(r"((foo)|bar)!bas", "foo!bar!bas", "(4,11)(4,7)(?,?)")
  check(r"((foo)|bar)!bas", "foo!bas", "(0,7)(0,3)(0,3)")
  check(r"(foo|(bar))!bas", "bar!bas", "(0,7)(0,3)(0,3)")
  check(r"(foo|(bar))!bas", "foo!bar!bas", "(4,11)(4,7)(4,7)")
  check(r"(foo|(bar))!bas", "foo!bas", "(0,7)(0,3)(?,?)")
  check(r"(foo|bar)!bas", "bar!bas", "(0,7)(0,3)")
  check(r"(foo|bar)!bas", "foo!bar!bas", "(4,11)(4,7)")
  check(r"(foo|bar)!bas", "foo!bas", "(0,7)(0,3)")
  check(r"^(([^!]+!)?([^!]+)|.+!([^!]+!)([^!]+))$", "foo!bar!bas", "(0,11)(0,11)(?,?)(?,?)(4,8)(8,11)")
  check(r"^([^!]+!)?([^!]+)$|^.+!([^!]+!)([^!]+)$", "bas", "(0,3)(?,?)(0,3)(?,?)(?,?)")
  check(r"^([^!]+!)?([^!]+)$|^.+!([^!]+!)([^!]+)$", "bar!bas", "(0,7)(0,4)(4,7)(?,?)(?,?)")
  check(r"^([^!]+!)?([^!]+)$|^.+!([^!]+!)([^!]+)$", "foo!bar!bas", "(0,11)(?,?)(?,?)(4,8)(8,11)")
  check(r"^([^!]+!)?([^!]+)$|^.+!([^!]+!)([^!]+)$", "foo!bas", "(0,7)(0,4)(4,7)(?,?)(?,?)")
  check(r"^(([^!]+!)?([^!]+)|.+!([^!]+!)([^!]+))$", "bas", "(0,3)(0,3)(?,?)(0,3)(?,?)(?,?)")
  check(r"^(([^!]+!)?([^!]+)|.+!([^!]+!)([^!]+))$", "bar!bas", "(0,7)(0,7)(0,4)(4,7)(?,?)(?,?)")
  check(r"^(([^!]+!)?([^!]+)|.+!([^!]+!)([^!]+))$", "foo!bar!bas", "(0,11)(0,11)(?,?)(?,?)(4,8)(8,11)")
  check(r"^(([^!]+!)?([^!]+)|.+!([^!]+!)([^!]+))$", "foo!bas", "(0,7)(0,7)(0,4)(4,7)(?,?)(?,?)")
  check(r".*(/XXX).*", "/XXX", "(0,4)(0,4)")
  check(r".*(\\XXX).*", "\\XXX", "(0,4)(0,4)")
  check(r"\\XXX", "\\XXX", "(0,4)")
  check(r".*(/000).*", "/000", "(0,4)(0,4)")
  check(r".*(\\000).*", "\\000", "(0,4)(0,4)")
  check(r"\\000", "\\000", "(0,4)")
end

def test3
  check(r"(a*)*", "a", "(0,1)(0,1)")
  check(r"(a*)*", "x", "(0,0)(?,?)")
  check(r"(a*)*", "aaaaaa", "(0,6)(0,6)")
  check(r"(a*)*", "aaaaaax", "(0,6)(0,6)")
  check(r"(a*)+", "a", "(0,1)(0,1)")
  check(r"(a*)+", "x", "(0,0)(0,0)")
  check(r"(a*)+", "aaaaaa", "(0,6)(0,6)")
  check(r"(a*)+", "aaaaaax", "(0,6)(0,6)")
  check(r"(a+)*", "a", "(0,1)(0,1)")
  check(r"(a+)*", "x", "(0,0)(?,?)")
  check(r"(a+)*", "aaaaaa", "(0,6)(0,6)")
  check(r"(a+)*", "aaaaaax", "(0,6)(0,6)")
  check(r"(a+)+", "a", "(0,1)(0,1)")
  check(r"(a+)+", "x", "")
  check(r"(a+)+", "aaaaaa", "(0,6)(0,6)")
  check(r"(a+)+", "aaaaaax", "(0,6)(0,6)")
  check(r"([a]*)*", "a", "(0,1)(0,1)")
  check(r"([a]*)*", "x", "(0,0)(?,?)")
  check(r"([a]*)*", "aaaaaa", "(0,6)(0,6)")
  check(r"([a]*)*", "aaaaaax", "(0,6)(0,6)")
  check(r"([a]*)+", "a", "(0,1)(0,1)")
  check(r"([a]*)+", "x", "(0,0)(0,0)")
  check(r"([a]*)+", "aaaaaa", "(0,6)(0,6)")
  check(r"([a]*)+", "aaaaaax", "(0,6)(0,6)")
  check(r"([^b]*)*", "a", "(0,1)(0,1)")
  check(r"([^b]*)*", "b", "(0,0)(?,?)")
  check(r"([^b]*)*", "aaaaaa", "(0,6)(0,6)")
  check(r"([^b]*)*", "aaaaaab", "(0,6)(0,6)")
  check(r"([ab]*)*", "a", "(0,1)(0,1)")
  check(r"([ab]*)*", "aaaaaa", "(0,6)(0,6)")
  check(r"([ab]*)*", "ababab", "(0,6)(0,6)")
  check(r"([ab]*)*", "bababa", "(0,6)(0,6)")
  check(r"([ab]*)*", "b", "(0,1)(0,1)")
  check(r"([ab]*)*", "bbbbbb", "(0,6)(0,6)")
  check(r"([ab]*)*", "aaaabcde", "(0,5)(0,5)")
  check(r"([^a]*)*", "b", "(0,1)(0,1)")
  check(r"([^a]*)*", "bbbbbb", "(0,6)(0,6)")
  check(r"([^a]*)*", "aaaaaa", "(0,0)(?,?)")
  check(r"([^ab]*)*", "ccccxx", "(0,6)(0,6)")
  check(r"([^ab]*)*", "ababab", "(0,0)(?,?)")
  check(r"((?:z)+|a)*", "zabcde", "(0,2)(1,2)")
  check(r"a+?", "aaaaaa", "(0,1)")
  check(r"(a)", "aaa", "(0,1)(0,1)")
  check(r"(a*?)", "aaa", "(0,0)(0,0)")
  check(r"(a)*?", "aaa", "(0,0)(?,?)")
  check(r"(a*?)*?", "aaa", "(0,0)(?,?)")
  check(r"(a*)*(x)", "x", "(0,1)(?,?)(0,1)")
  check(r"(a*)*(x)", "ax", "(0,2)(0,1)(1,2)")
  check(r"(a*)*(x)", "axa", "(0,2)(0,1)(1,2)")
  check(r"(a*)*(x)", "x", "(0,1)(?,?)(0,1)")
  check(r"(a*)*(x)", "ax", "(0,2)(0,1)(1,2)")
  check(r"(a*)*(x)", "axa", "(0,2)(0,1)(1,2)")
  check(r"(a*)+(x)", "x", "(0,1)(0,0)(0,1)")
  check(r"(a*)+(x)", "ax", "(0,2)(0,1)(1,2)")
  check(r"(a*)+(x)", "axa", "(0,2)(0,1)(1,2)")
  check(r"(a*){2}(x)", "x", "(0,1)(0,0)(0,1)")
  check(r"(a*){2}(x)", "ax", "(0,2)(1,1)(1,2)")
  check(r"(a*){2}(x)", "axa", "(0,2)(1,1)(1,2)")
end

def test4
  check(r"((..)|(.))", "", "")
  check(r"((..)|(.))((..)|(.))", "", "")
  check(r"((..)|(.))((..)|(.))((..)|(.))", "", "")
  check(r"((..)|(.)){1}", "", "")
  check(r"((..)|(.)){2}", "", "")
  check(r"((..)|(.)){3}", "", "")
  check(r"((..)|(.))*", "", "(0,0)(?,?)(?,?)(?,?)")
  check(r"((..)|(.))", "a", "(0,1)(0,1)(?,?)(0,1)")
  check(r"((..)|(.))((..)|(.))", "a", "")
  check(r"((..)|(.))((..)|(.))((..)|(.))", "a", "")
  check(r"((..)|(.)){1}", "a", "(0,1)(0,1)(?,?)(0,1)")
  check(r"((..)|(.)){2}", "a", "")
  check(r"((..)|(.)){3}", "a", "")
  check(r"((..)|(.))*", "a", "(0,1)(0,1)(?,?)(0,1)")
  check(r"((..)|(.))", "aa", "(0,2)(0,2)(0,2)(?,?)")
  check(r"((..)|(.))((..)|(.))", "aa", "(0,2)(0,1)(?,?)(0,1)(1,2)(?,?)(1,2)")
  check(r"((..)|(.))((..)|(.))((..)|(.))", "aa", "")
  check(r"((..)|(.)){1}", "aa", "(0,2)(0,2)(0,2)(?,?)")
  check(r"((..)|(.)){2}", "aa", "(0,2)(1,2)(?,?)(1,2)")
  check(r"((..)|(.)){3}", "aa", "")
  check(r"((..)|(.))*", "aa", "(0,2)(0,2)(0,2)(?,?)")
  check(r"((..)|(.))", "aaa", "(0,2)(0,2)(0,2)(?,?)")
  check(r"((..)|(.))((..)|(.))", "aaa", "(0,3)(0,2)(0,2)(?,?)(2,3)(?,?)(2,3)")
  check(r"((..)|(.))((..)|(.))((..)|(.))", "aaa", "(0,3)(0,1)(?,?)(0,1)(1,2)(?,?)(1,2)(2,3)(?,?)(2,3)")
  check(r"((..)|(.)){1}", "aaa", "(0,2)(0,2)(0,2)(?,?)")
  check(r"((..)|(.)){2}", "aaa", "(0,3)(2,3)(0,2)(2,3)")
  check(r"((..)|(.)){3}", "aaa", "(0,3)(2,3)(?,?)(2,3)")
  check(r"((..)|(.))*", "aaa", "(0,3)(2,3)(0,2)(2,3)")
  check(r"((..)|(.))", "aaaa", "(0,2)(0,2)(0,2)(?,?)")
  check(r"((..)|(.))((..)|(.))", "aaaa", "(0,4)(0,2)(0,2)(?,?)(2,4)(2,4)(?,?)")
  check(r"((..)|(.))((..)|(.))((..)|(.))", "aaaa", "(0,4)(0,2)(0,2)(?,?)(2,3)(?,?)(2,3)(3,4)(?,?)(3,4)")
  check(r"((..)|(.)){1}", "aaaa", "(0,2)(0,2)(0,2)(?,?)")
  check(r"((..)|(.)){2}", "aaaa", "(0,4)(2,4)(2,4)(?,?)")
  check(r"((..)|(.)){3}", "aaaa", "(0,4)(3,4)(0,2)(3,4)")
  check(r"((..)|(.))*", "aaaa", "(0,4)(2,4)(2,4)(?,?)")
  check(r"((..)|(.))", "aaaaa", "(0,2)(0,2)(0,2)(?,?)")
  check(r"((..)|(.))((..)|(.))", "aaaaa", "(0,4)(0,2)(0,2)(?,?)(2,4)(2,4)(?,?)")
  check(r"((..)|(.))((..)|(.))((..)|(.))", "aaaaa", "(0,5)(0,2)(0,2)(?,?)(2,4)(2,4)(?,?)(4,5)(?,?)(4,5)")
  check(r"((..)|(.)){1}", "aaaaa", "(0,2)(0,2)(0,2)(?,?)")
  check(r"((..)|(.)){2}", "aaaaa", "(0,4)(2,4)(2,4)(?,?)")
  check(r"((..)|(.)){3}", "aaaaa", "(0,5)(4,5)(2,4)(4,5)")
  check(r"((..)|(.))*", "aaaaa", "(0,5)(4,5)(2,4)(4,5)")
  check(r"((..)|(.))", "aaaaaa", "(0,2)(0,2)(0,2)(?,?)")
  check(r"((..)|(.))((..)|(.))", "aaaaaa", "(0,4)(0,2)(0,2)(?,?)(2,4)(2,4)(?,?)")
  check(r"((..)|(.))((..)|(.))((..)|(.))", "aaaaaa", "(0,6)(0,2)(0,2)(?,?)(2,4)(2,4)(?,?)(4,6)(4,6)(?,?)")
  check(r"((..)|(.)){1}", "aaaaaa", "(0,2)(0,2)(0,2)(?,?)")
  check(r"((..)|(.)){2}", "aaaaaa", "(0,4)(2,4)(2,4)(?,?)")
  check(r"((..)|(.)){3}", "aaaaaa", "(0,6)(4,6)(4,6)(?,?)")
  check(r"((..)|(.))*", "aaaaaa", "(0,6)(4,6)(4,6)(?,?)")
  check(r"X(.?){0,}Y", "X1234567Y", "(0,9)(7,8)")
  check(r"X(.?){1,}Y", "X1234567Y", "(0,9)(7,8)")
  check(r"X(.?){2,}Y", "X1234567Y", "(0,9)(7,8)")
  check(r"X(.?){3,}Y", "X1234567Y", "(0,9)(7,8)")
  check(r"X(.?){4,}Y", "X1234567Y", "(0,9)(7,8)")
  check(r"X(.?){5,}Y", "X1234567Y", "(0,9)(7,8)")
  check(r"X(.?){6,}Y", "X1234567Y", "(0,9)(7,8)")
  check(r"X(.?){7,}Y", "X1234567Y", "(0,9)(7,8)")
  check(r"X(.?){8,}Y", "X1234567Y", "(0,9)(8,8)")
  check(r"X(.?){0,8}Y", "X1234567Y", "(0,9)(8,8)")
  check(r"X(.?){1,8}Y", "X1234567Y", "(0,9)(8,8)")
  check(r"X(.?){2,8}Y", "X1234567Y", "(0,9)(8,8)")
  check(r"X(.?){3,8}Y", "X1234567Y", "(0,9)(8,8)")
  check(r"X(.?){4,8}Y", "X1234567Y", "(0,9)(8,8)")
  check(r"X(.?){5,8}Y", "X1234567Y", "(0,9)(8,8)")
  check(r"X(.?){6,8}Y", "X1234567Y", "(0,9)(8,8)")
  check(r"X(.?){7,8}Y", "X1234567Y", "(0,9)(8,8)")
  check(r"X(.?){8,8}Y", "X1234567Y", "(0,9)(8,8)")
  check(r"(a|ab|c|bcd){0,}(d*)", "ababcd", "(0,1)(0,1)(1,1)")
  check(r"(a|ab|c|bcd){1,}(d*)", "ababcd", "(0,1)(0,1)(1,1)")
  check(r"(a|ab|c|bcd){2,}(d*)", "ababcd", "(0,6)(3,6)(6,6)")
  check(r"(a|ab|c|bcd){3,}(d*)", "ababcd", "(0,6)(3,6)(6,6)")
  check(r"(a|ab|c|bcd){4,}(d*)", "ababcd", "")
  check(r"(a|ab|c|bcd){0,10}(d*)", "ababcd", "(0,1)(0,1)(1,1)")
  check(r"(a|ab|c|bcd){1,10}(d*)", "ababcd", "(0,1)(0,1)(1,1)")
  check(r"(a|ab|c|bcd){2,10}(d*)", "ababcd", "(0,6)(3,6)(6,6)")
  check(r"(a|ab|c|bcd){3,10}(d*)", "ababcd", "(0,6)(3,6)(6,6)")
  check(r"(a|ab|c|bcd){4,10}(d*)", "ababcd", "")
  check(r"(a|ab|c|bcd)*(d*)", "ababcd", "(0,1)(0,1)(1,1)")
  check(r"(a|ab|c|bcd)+(d*)", "ababcd", "(0,1)(0,1)(1,1)")
  check(r"(ab|a|c|bcd){0,}(d*)", "ababcd", "(0,6)(4,5)(5,6)")
  check(r"(ab|a|c|bcd){1,}(d*)", "ababcd", "(0,6)(4,5)(5,6)")
  check(r"(ab|a|c|bcd){2,}(d*)", "ababcd", "(0,6)(4,5)(5,6)")
  check(r"(ab|a|c|bcd){3,}(d*)", "ababcd", "(0,6)(4,5)(5,6)")
  check(r"(ab|a|c|bcd){4,}(d*)", "ababcd", "")
  check(r"(ab|a|c|bcd){0,10}(d*)", "ababcd", "(0,6)(4,5)(5,6)")
  check(r"(ab|a|c|bcd){1,10}(d*)", "ababcd", "(0,6)(4,5)(5,6)")
  check(r"(ab|a|c|bcd){2,10}(d*)", "ababcd", "(0,6)(4,5)(5,6)")
  check(r"(ab|a|c|bcd){3,10}(d*)", "ababcd", "(0,6)(4,5)(5,6)")
  check(r"(ab|a|c|bcd){4,10}(d*)", "ababcd", "")
  check(r"(ab|a|c|bcd)*(d*)", "ababcd", "(0,6)(4,5)(5,6)")
  check(r"(ab|a|c|bcd)+(d*)", "ababcd", "(0,6)(4,5)(5,6)")
end

def test5
  check(r"abc", "abcdef", "(0,3)")
  check(r"cde", "abcdef", "(2,5)")
  check(r"abc*", "abdef", "(0,2)")
  check(r"abc*", "abcccdef", "(0,5)")
  check(r"abc+", "abdef", "")
  check(r"abc+", "abcccdef", "(0,5)")
  check(r"(([0-9]*)([a-z]*)[0-9]*)", "1234hello567", "(0,12)(0,12)(0,4)(4,9)")
  check(r"([0-9]*)(([a-z]*)([0-9]*))", "1234hello567", "(0,12)(0,4)(4,12)(4,9)(9,12)")
  check(r"(([0-9]*)(?:[a-z]*)[0-9]*)", "1234hello568", "(0,12)(0,12)(0,4)")
  check(r"(?:[0-9]*)(([a-z]*)(?:[0-9]*))", "1234hello568", "(0,12)(4,12)(4,9)")
  check(r"([0-9]*)(?:([a-z]*)(?:[0-9]*))", "1234hello568", "(0,12)(0,4)(4,9)")
  check(r"(?:)", "1234hello568", "(0,0)")
  check(r"1?:", "1:", "(0,2)")
  check(r"[0-9]+", "123abc456", "(0,3)")
  check(r"[a-zA-Z0-9_]+", "123abc_456 abc", "(0,10)")
  check(r"(([0-9]*)([a-z]*)[a-zA-Z0-9_]*)", "123hello456", "(0,11)(0,11)(0,3)(3,8)")
  check(r"[a]*", "a", "(0,1)")
  check(r"([yab]*)(e*)([cd])", "xyac", "(1,4)(1,3)(3,3)(3,4)")
  check(r"([yab]*)(e*)([^y]?)$", "xyac", "(1,4)(1,3)(3,3)(3,4)")
  check(r"[-]*", "--", "(0,2)")
  check(r"[-a]*", "-a-b", "(0,3)")
  check(r"[-ab]*", "-a-b", "(0,4)")
  check(r"[-a-c]*", "-a-b-d-", "(0,5)")
  check(r"[a-]*", "-a-b", "(0,3)")
  check(r"[ab-]*", "-a-b", "(0,4)")
  check(r"[a-c-]*", "-a-b-d-", "(0,5)")
  check(r"(\?:)", ":", "")
  check(r"\(?:", "(:", "(0,2)")
  check(r"[^a]*b", "hhagbdbdbjsjjjda", "(3,9)")
  check(r"a{5}", "aaaaaaaa", "(0,5)")
  check(r"[^a]{1,3}", "vbcvb", "(0,3)")
  check(r"(abc+){5}|[0-9]{1,}", "abcabcabcabcabcabchsdfhsdh", "(0,15)(12,15)")
  check(r"(abc+){5}|[0-9]{1,}", "62374623", "(0,8)(?,?)")
  check(r"b[^c]*", "djfjgjsdfjbshdhfhshd", "(10,20)")
  check(r"۱۲۳۴۵۶۷۸۹۰", "۱۲۳۴۵۶۷۸۹۰", "(0,20)")
  checku(r"[йцукен]", "ке", "(0,2)")
  checku(r"日本語*", "日本語語語語語語語本本本本", "(0,27)")
  checku(r"([^ひらがな])|(な+)", "なななな", "(0,12)(?,?)(0,12)")
  checku(r"([^ひらがな])|(な+)", "abc", "(0,1)(0,1)(?,?)")
  check(r"([^abc])|(a+)", "aaaa", "(0,4)(?,?)(0,4)")
  check(r"[a-g]+", "aaaabcdefghij", "(0,10)")
  check(r"[а-г]+", "ааааабвг...", "(0,16)")
  check(r"called|chief|dust|familiar|forth|waif|campaign|divers|smile|notice|kill|human|stands|nightshade|dollar|doughty|gloaming|twist|July|officers|wrest|coop|one|ability|welcome|significance|writer|spring|it's|helped|set|Paris|from|coomb|stay|hummock|taken|anon|makes|boat|nearly|am|justice|further|expression|contemporary|sooth|order|about|question|lived|apply|educational|of|night|satisfy|opened|never|success|until|visit|promise|parts|beneath|matter|typical|bade|apartment|rapidly|primary|bring|throat|hold|laws|understand|trade|desire|material|evidence|another|often|plash|model|someone|bond|hell|relationship|probably|exercise|performance|wants|known|countries|gammer|leeward|took|itself|representative|objection|aircraft", "hhfd h23  performance", "(10,21)")
  check(r"abc+h+d+f", "abcccccccccccchdf", "(0,17)")
  check(r"([0-9]|abc){5}[0-9]+(grh)", "344444442344grhhhsdfg", "(0,15)(4,5)(12,15)")
  check(r"[A-Fa-f0-9]{64}", "bf33d4a0dbbee85061531c9d47e5aae692c0729e5c9c1fa21c46d9bcab5f52c5", "(0,64)")
  check(r"<tag>[^<]*</tag>", "ajdas <tag> sidufisudf hsdfhshdfh sdf </tag> asjdfjs", "(6,44)")
  check(r"^([a-z0-9_.-]+)@([0-9a-z.-]+)\.([a-z.]{2,5})$", "veloval596@godpeed.com", "(0,22)(0,10)(11,18)(19,22)")
  check(r"abc\$d", "abc", "")
  check(r"abc$|cdb", "abccdb", "(3,6)")
  check(r"abc$|c", "abcc", "(2,3)")
  check(r"^ac|cdb", "abccdb", "(3,6)")
  check(r"^abc+d", "abccdb", "(0,5)")
  check(r"^(abc|kj)", "kj", "(0,2)(0,2)")
  check(r"^(abc|kj)", "jhdfh kj hhd", "")
  check(r"(^abc)|(abc)", " abc", "(1,4)(?,?)(1,4)")
  check(r"(abc)|(^abc)", " abc", "(1,4)(1,4)(?,?)")
  check(r"(^abc)|(abc$)", " abc", "(1,4)(?,?)(1,4)")
  check(r"(^abc)|(abc$)", "abc", "(0,3)(0,3)(?,?)")
  check(r"(^abc)|(abc$)", " abc bc", "")
  check(r"([^qwe]*rty)|(asd[^fgh]*)", "qweasd     qqqq fff", "(3,16)(?,?)(3,16)")
  check(r"([^qwe]*rty+)|(asd[^fgh]*)", "qwehh  sjsjsj rtyyyyyyyyyj sdj", "(3,25)(3,25)(?,?)")
  check(r"((abc))(fv)", "abcfv", "(0,5)(0,3)(0,3)(3,5)")
  check(r"\<abc", "   	   abc", "(7,10)")
  check(r"\<abc", " hsdh  abc", "(7,10)")
  check(r"\<(as|js)", "     js hashasd", "(5,7)(5,7)")
  check(r"\<(as|js)", "     gjs hashasd", "")
  check(r"ab\<d", "ab   d", "")
  check(r"\<d+(abc|fbc|bcd)", "     bcddd bddddfbc", "")
  check(r"\<d+(abc|fbc|bcd)", "     bcddd ddvddfbc", "")
  check(r"\<d+(abc|fbc|bcd)", "     bcddd ddddfbc", "(11,18)(15,18)")
  check(r"b|\<(abc|fbc|bcd)", "     bcddd fbc", "(5,6)(?,?)")
  check(r"\<abc", "abc", "(0,3)")
  check(r"\<abc\>", "   abc   ", "(3,6)")
  check(r"abc\>", "abcccc", "")
  check(r"abc\>", "abc", "(0,3)")
  check(r"\<(hello|world|word|nice|try)\>", "world", "(0,5)(0,5)")
  check(r"\<(hello|world|word|nice|try)\>", " world ", "(1,6)(1,6)")
  check(r"\<(hello|world|word|nice|try)\>", "    worldfsd", "")
  check(r"\<(hello|world|word|nice|try)\>", "    dworld", "")
  check(r"\<(hello|world)\>|\<(word|nice|try)\>", "    nice   ", "(4,8)(?,?)(4,8)")
  check(r"(abc+)|\<[^k]*\>", "    nicehdhfd", "(4,13)(?,?)")
  check(r"[-+]?\<(0[xX][0-9a-fA-FUL]+|[0-9.]{1,}[0-9eEfFuULl]+|[0-9]+)\>", "21361264", "(0,8)(0,8)")
  check(r"[-+]?\<(0[xX][0-9a-fA-FUL]+|[0-9.]{1,}[0-9eEfFuULl]+|[0-9]+)\>", "0x2346ULL", "(0,9)(0,9)")
  check(r"[-+]?\<(0[xX][0-9a-fA-FUL]+|[0-9.]{1,}[0-9eEfFuULl]+|[0-9]+)\>", "1.234423", "(0,8)(0,8)")
  check(r"[-+]?\<(0[xX][0-9a-fA-FUL]+|[0-9.]{1,}[0-9eEfFuULl]+|[0-9]+)\>", "	abc23321abb", "")
  check(r"[-+]?\<(0[xX][0-9a-fA-FUL]+|[0-9.]{1,}[0-9eEfFuULl]+|[0-9]+)\>", "   3245 jjfjjj", "(3,7)(3,7)")
  check(r"[-+]?\<(0[xX][0-9a-fA-FUL]+|[0-9.]{1,}[0-9eEfFuULl]+|[0-9]+)\>", "   0x663q", "")
  check(r"[-+]?\<(0[xX][0-9a-fA-FUL]+|[0-9.]{1,}[0-9eEfFuULl]+|[0-9]+)\>", " x37247", "")
  check(r"[-+]?\<(0[xX][0-9a-fA-FUL]+|[0-9.]{1,}[0-9eEfFuULl]+|[0-9]+)\>", "  124435.7727ULL", "(2,16)(2,16)")
  check(r"(([-+]?\<(0[xX][0-9a-fA-FUL]+|[0-9.]{1,}[0-9eEfFuULl]+|[0-9]+)\>))", "str + len - 1;", "(12,13)(12,13)(12,13)(12,13)")
  check(r"qwerty.*$", " jjdfjk sjdjjsqwerty jdfjdfhhdhfdjjjfj jjjdf", "(14,44)")
  check(r"([a-zA-Z0-9_][^1]*[a-zA-Z0-9_])|(\$([^\$]+)\$)", "\$\"},  /* email */", "(9,14)(9,14)(?,?)(?,?)")
  check(r"([a-zA-Z0-9_][^1]*[a-zA-Z0-9_])|(\$([^\$]+)\$)", "\$\"},  /* email */\$", "(0,18)(?,?)(0,18)(1,17)")
  check(r"(h[^1]*b)|(\$([^\$]+)\$)", r"$  hbbbb", "(3,8)(3,8)(?,?)(?,?)")
  check(r"(h[^1]*b)|(\$([^\$]+)\$)", r"$ hsdhs $ ", "(0,9)(?,?)(0,9)(1,8)")
  check(r"(a|aa)*", "a", "(0,1)(0,1)")
  check(r"(a|aa)*", "aa", "(0,2)(1,2)")
  check(r"(a|aa)*", "aaa", "(0,3)(2,3)")
  check(r"(a|aa)*", "aaaa", "(0,4)(3,4)")
  check(r"(a|aa)*", "aaaaa", "(0,5)(4,5)")
  check(r"(a|aa)*", "aaaaaa", "(0,6)(5,6)")
  check(r"(aaaa|aaa|a){3,4}", "aaaaaaaaaa", "(0,10)(9,10)")
  check(r"(a)(a)", "aaaa", "(0,2)(0,1)(1,2)")
  check(r"(a){2}", "aaaa", "(0,2)(1,2)")
  check(r"(a|bcdef|g|ab|c|d|e|efg|fg)*", "abcdefg", "(0,7)(6,7)")
  check(r"(.*) (.*) (.*) (.*) (.*)", "a  c d ee fff", "(0,13)(0,2)(3,4)(5,6)(7,9)(10,13)")
  check(r"(.+?)(.+?)", "abcd", "(0,2)(0,1)(1,2)")
  check(r"(a?)(a?)(a?)aaa", "aaa", "(0,3)(0,0)(0,0)(0,0)")
  check(r"(ab)?(ab)?(ab)?aaa", "abaaa", "(0,5)(0,2)(?,?)(?,?)")
  check(r"(.+)(.+)", "abcd", "(0,4)(0,3)(3,4)")
  check(r"a(?:b|c|d){4,5}(.)", "acdbcdbe", "(0,7)(6,7)")
  check(r"(?:c|d)(?:)(?:a(?:)(?:b)(?:b(?:))(?:b(?:)(?:b)))", "cabbbb", "(0,6)")
  check(r"\<abc", "dabc", "")
  check(r"a\([COM]+\)|([A-Za-z_%.]+):", "a(COM:=.o):", "(2,6)(2,5)")
  check(r"xyz\([COM]+\)|(abcd[A-Za-z_%.]+):cd", "xyz(abcdCOM:cd):", "(4,14)(4,11)")
  check(r"aaaaa(aa)aa(aa(a)a)?aa", "aaaaaaaaaaaaaaaaaaaaaaaaa", "(0,15)(5,7)(9,13)(11,12)")
  check(r"^\.+(((/)\.\.+)+)?", "../../..", "(0,8)(2,8)(5,8)(5,6)")
  check(r"^(http|https|ftp):[/]{2}([a-zA-Z0-9\\.]+\.[a-zA-Z]{2,4})(:[0-9]+)?/?([a-zA-Z0-9\\._?,'/+&amp;%$#=~]*)", "https://kyryl.tk/404", "(0,20)(0,5)(8,16)(?,?)(17,20)")
  check(r"(\$\([a-zA-Z0-9_]+\))|(([A-Za-z_%.]+):)", r"OBJ = $(SRC:.c=.o)", "(8,12)(?,?)(8,12)(8,11)")
  checku(r".{5}", "рврыр", "(0,10)")
  checku(r".{10,15}", "рврырdhsjhh", "(0,16)")
  check(r"(a(abc)+){3,}", "aabcabcaabcaabc", "(0,15)(11,15)(12,15)")
  check(r"(aa(aa)|a(a)a|a){3,4}", "aaaaaaaaaaaaaaaaaa", "(0,16)(12,16)(14,16)(?,?)")
  check(r"(aa(aa)|a(a)a|a){3,4}", "aaaaaaaaaaaaaaa", "(0,15)(12,15)(10,12)(13,14)")
  check(r"(aa(aa)|a(a)a|a){3,4}", "aaaaaaaaaaaaaa", "(0,13)(12,13)(10,12)(?,?)")
  check(r"(aa(aa)|a(a)a|a){3,4}", "aaaaaaaaaaaaa", "(0,13)(12,13)(10,12)(?,?)")
  check(r"(aa(aa)|a(a)a|a){3,4}", "aaaaaaaaaaaa", "(0,12)(8,12)(10,12)(?,?)")
  check(r"(aa(aa)|a(a)a|a){3,4}", "aaaaaaaaaaa", "(0,11)(8,11)(6,8)(9,10)")
  check(r"(aa(aa)|a(a)a|a){3,4}", "aaaaaaaaaa", "(0,10)(9,10)(6,8)(?,?)")
  check(r"(a(a)(aa)|aaa|a){3,4}", "aaaaaaaaaa", "(0,10)(9,10)(5,6)(6,8)")
  check(r"(a(a)(aa)|aaa|a){6}", "aaaaaaaaaa", "(0,9)(8,9)(1,2)(2,4)")
  check(r"(a(a)(aa)|aaa|a){5,8}", "aaaaaaaaaa", "(0,10)(9,10)(1,2)(2,4)")
  check(r"(a(a)(aa)|(aa)a|(a)){9}", "aaaaaaaaaa", "(0,9)(8,9)(?,?)(?,?)(?,?)(8,9)")
  check(r"(a(a)(aa)|(aa)a|(a)){10}", "aaaaaaaaaa", "(0,10)(9,10)(?,?)(?,?)(?,?)(9,10)")
  check(r"(a(a)(aa)|(aa)a|(a)){11}", "aaaaaaaaaa", "")
  check(r"(a(a)a|(a)|a(aa)|aa){2,5}", "aaaaaaaaaaaaaa", "(0,13)(12,13)(10,11)(12,13)(?,?)")
  check(r"((a)a|a(aa)|(aaaa)|(a*)){3,10}", "aaaaaaaaaaaaaaaaa", "(0,17)(17,17)(14,15)(?,?)(?,?)(17,17)")
  check(r"((a)a|a(aa)|(aaaa)|(a+)){3,10}", "aaaaaaaaaaaaaaaaa", "(0,17)(16,17)(14,15)(?,?)(?,?)(16,17)")
  check(r"(aa(aa){3}|(a)a+(a)|a){3,4}", "aaaaaaaaaaaaaaa", "(0,15)(14,15)(6,8)(8,9)(13,14)")
  check(r"((ax)+b(ax)*)*", "axbaxaxbaxaxaxbaxaxaxax", "(0,7)(0,7)(0,2)(5,7)")
  check(r"(a*)(b?)(b+)b{3}", "aaabbbbbbb", "(0,10)(0,3)(3,4)(4,7)")
  check(r"(a*){2,3}", "aaaaaaaaaaaaaaaaa", "(0,17)(17,17)")
  check(r"(a|at|ate|aten)(ten|en|n|d)", "atend", "(0,4)(0,1)(1,4)")
  check(r"(a|aa|aaa|aaaaa)(aa|aaaa|aaa)", "aaaaaa", "(0,3)(0,1)(1,3)")
  check(r"(a|a.|a..|a....)(a.|a...|a..)", "aaaaaa", "(0,3)(0,1)(1,3)")
  check(r"(a*b|b*a)(a*b|b*a)", "bbaa", "(0,2)(0,1)(1,2)")
  check(r"(ab|((ab)c|abc))c*", "abc", "(0,3)(0,2)(?,?)(?,?)")
  check(r"((a*b*c*)|(a*c*b*))*", "abcacb", "(0,6)(5,6)(5,6)(?,?)")
  check(r".*|.*(a|b)?", "aa", "(0,2)(?,?)")
  check(r"((.a|.ab)(bc.|c.)|abc.)", "xabcx", "(0,5)(0,5)(0,2)(2,5)")
  check(r"\\<", r"\<", "(0,2)")
  check(r"\\\\<", r"\\\\<", "(2,5)")
  check(r"[^a]*b", "hhagbdbdbjsjjjda..b", "(3,9)")
  check(r"^(.+):([0-9]+):(.+)", "userspace-api/media/v4l/vbi_625.svg:98:   :34bstroke-linejoin:m;stroke-miteit:10;stroke-day:n;se-ty:1\"", "(0,102)(0,35)(36,38)(39,102)")
  check(r"^(.+):([0-9]+).(.+)", "userspace-api/media/v4l/vbi_625.svg:98:   :34bstroke-linejoin:m;stroke-miteit:10;stroke-day:n;se-ty:1\"", "(0,102)(0,77)(78,80)(81,102)")
  check(r"^(.+):([0-9]+).(.+){2,5}", "userspace-api/media/v4l/vbi_625.svg:98:   :34bstroke-linejoin:m;stroke-miteit:10;stroke-day:n;se-ty:1\"", "(0,102)(0,77)(78,80)(101,102)")
  check(r"^(.+):([0-9]+):(.+)", "h:98:   :3234434butt;stroke-linejoin:miter;stroke-miterlimit:10;stroke-dasharray:none;stroke-opacity:1\"", "(0,103)(0,1)(2,4)(5,103)")
  check(r"^(.+):([0-9]+).(.+)", "h:98:   :3234utt;strokeliin:miter;stroke-mirlimit:10;stroke-dasharray:none;stroke-opacity:1n\"", "(0,93)(0,89)(90,91)(92,93)")
  check(r"^(.+):([0-9]+):(.+)", "h:98:   :3234utt;strokeliin:miter;stroke-mirlimit:10;stroke-dasharray:none;stroke-opacity:1n\"", "(0,93)(0,1)(2,4)(5,93)")
  check(r"^(.+):([0-9]+):(.+)(.+)", "h:98:   :3234utt;strokeliin:miter;stroke-mirlimit:10;stroke-dasharray:none;stroke-opacity:1n\"", "(0,93)(0,1)(2,4)(5,92)(92,93)")
  check(r"(.*):([0-9]*):(.*)", "h:98:   :3234utt;strokeliin:miter;stroke-mirlimit:10;stroke-dasharray:none;stroke-opacity:1n\"", "(0,93)(0,1)(2,4)(5,93)")
  check(r"(.*):([0-9]*)(   ):((.*)+)", "h:98:   :3234utt;strokeliin:miter;stroke-mirlimit:10;stroke-dasharray:none;stroke-opacity:1n\"", "(0,93)(0,4)(5,5)(5,8)(9,93)(9,93)")
  check(r"(((aaa+)+)bb*)(.*):([0-9]*):(.+)", "aaaaabb grt:123:....", "(0,20)(0,7)(0,5)(0,5)(7,11)(12,15)(16,20)")
  check(r"^(.+):([0-9]+):(.{8})+", "h:98:   :3234utt;strokeliin:miter;stroke-mirlimit:10;stroke-dasharray:none;stroke-opacity:1n\"", "(0,93)(0,1)(2,4)(85,93)")
  check("^(.+):([0-9]+):((aaaa)|(.+))\"", "h:98:   :3234utt;strokeliin:miter;stroke-mirlimit:10;stroke-dasharray:none;stroke-opacity:1n\"", "(0,93)(0,1)(2,4)(5,92)(?,?)(5,92)")
  check(r"[0-9]+.(.*)", "650-253-0001", "(0,12)(4,12)")
  check(r"[0-9]+.(.*)", "650-253-000123434-45551221", "(0,26)(4,26)")
  check(r"([0-9])+.(.*)", "650-253-000123434-45551221", "(0,26)(2,3)(4,26)")
  check(r"(([0-9])+)(.)(.*)", "650-253-000123434-455512213224hsaqer", "(0,36)(0,3)(2,3)(3,4)(4,36)")
  check(r"(abc|sjd|qwq(hs|qw|oo)|(ty|xx|pp)we)", "ppwe", "(0,4)(0,4)(?,?)(0,2)")
  check(r"(a?)?", "m", "(0,0)(0,0)")
  check(r"(a?)?", "a", "(0,1)(0,1)")
  check(r"(a?)??", "aa", "(0,0)(?,?)")
  check(r"(a?)(a?)(a?a?)aaa(a?)|(b?)", "aa", "(0,0)(?,?)(?,?)(?,?)(?,?)(0,0)")
  check(r"(a?)(a?)(a?a?)aaa(a?)|(b?)", "aaaaaaaaaaaaaa", "(0,8)(0,1)(1,2)(2,4)(7,8)(?,?)")
  check(r"(a*)??", "a", "(0,0)(?,?)")
  check(r"(a*)|(b*)|(c*)", "bbbbbbbbb", "(0,0)(0,0)(?,?)(?,?)")
  check(r"(a?|a?)|(a*)?", "aaa", "(0,1)(0,1)(?,?)")
  check(r"(a?|a?)a|(a*)?", "aaa", "(0,2)(0,1)(?,?)")
  check(r"(a?|a?)d|(a*)?", "aaa", "(0,3)(?,?)(0,3)")
  check(r"((a*b*c*)|(a*c*b*))+?", "bbb", "(0,3)(0,3)(0,3)(?,?)")
  check(r"((a*b*c*)|(a*c*b*))*?", "bbb", "(0,0)(?,?)(?,?)(?,?)")
  check(r"((a*b*c*)|(a*c*b*))+", "bbb", "(0,3)(0,3)(0,3)(?,?)")
end

def test6
  check(r"a{0}b", "aaaaaaab", "(7,8)")
  check(r"a{0,}b", "aaaaaaab", "(0,8)")
  check(r"a{0,2}b", "aaaaaaab", "(5,8)")
  check(r"a{2}b", "aaaaaaab", "(5,8)")
  check(r"a{2,}b", "aaaaaaab", "(0,8)")
  check(r"a{2,3}b", "aaaaaaab", "(4,8)")
  check(r"a{0}b", "b", "(0,1)")
  check(r"a{0,}b", "b", "(0,1)")
  check(r"a{0,2}b", "b", "(0,1)")
  check(r"a{1}b", "b", "")
  check(r"a{1,}b", "b", "")
  check(r"a{1,3}b", "b", "")
  check(r"(.?){0,}", "aaa", "(0,3)(2,3)")
  check(r"(.?){1,}", "aaa", "(0,3)(2,3)")
  check(r"(.?){2,}", "aaa", "(0,3)(2,3)")
  check(r"(.?){3,}", "aaa", "(0,3)(2,3)")
  check(r"(.?){0,}?", "aaa", "(0,0)(?,?)")
  check(r"(.?){1,}?", "aaa", "(0,1)(0,1)")
  check(r"(.?){2,}?", "aaa", "(0,2)(1,2)")
  check(r"(.?){3,}?", "aaa", "(0,3)(2,3)")
  check(r"a{0}", "aaaa", "(0,0)")
  check(r"a{1}", "aaaa", "(0,1)")
  check(r"a{0,}", "aaaa", "(0,4)")
  check(r"a{1,}", "aaaa", "(0,4)")
  check(r"a{1,3}", "aaaa", "(0,3)")
  check(r"a{0}?", "aaaa", "(0,0)")
  check(r"a{1}?", "aaaa", "(0,1)")
  check(r"a{0,}?", "aaaa", "(0,0)")
  check(r"a{1,}?", "aaaa", "(0,1)")
  check(r"a{1,3}?", "aaaa", "(0,1)")
  check(r"a{0}b", "aaaab", "(4,5)")
  check(r"a{1}b", "aaaab", "(3,5)")
  check(r"a{0,}b", "aaaab", "(0,5)")
  check(r"a{1,}b", "aaaab", "(0,5)")
  check(r"a{1,3}b", "aaaab", "(1,5)")
  check(r"a{0}?b", "aaaab", "(4,5)")
  check(r"a{1}?b", "aaaab", "(3,5)")
  check(r"a{0,}?b", "aaaab", "(0,5)")
  check(r"a{1,}?b", "aaaab", "(0,5)")
  check(r"a{1,3}?b", "aaaab", "(1,5)")
end

def test7
  assert re.match(r"\x00", "\0\0\0", re.G) == ["\0", "\0", "\0"]
  assert re.match(r"\w+", "abc\0def\0", re.G) == ["abc", "def"]
  assert re.split(r"\x00", "a\0b\0c\0d") == ["a", "b", "c", "d"]
  assert re.test(r"\x61", "a")
  assert re.test(r"\u0061", "a")
  assert re.test(r"\U00000061", "a")
  assert re.test(r"\xE6\x88\x91", "我")
  assert re.test(r"\u6211", "我", re.U)
  assert not re.test(r"\xE6\x88\x91", "我", re.U)
  assert not re.test(r"\u6211", "我")
  assert re.test(r"\xF0\xAF\xA2\x94", "弢")
  assert re.test(r"\U0002F894", "弢", re.U)
  assert not re.test(r"\xF0\xAF\xA2\x94", "弢", re.U)
  assert not re.test(r"\U0002F894", "弢")
end

def test8
  assert re.match(r"\n|\r|\t|\b|\v|\f", "\n \r \t \x08 \x0b \x0c", re.G) == ["\n", "\r", "\t", "\x08", "\x0b", "\x0c"]
  assert re.match(r"[\n\r\t\b\v\f]", "\n \r \t \x08 \x0b \x0c", re.G) == ["\n", "\r", "\t", "\x08", "\x0b", "\x0c"]
  assert re.match(r"[\x01-\x03]", "\x00\x01\x02\x03\x04", re.G) == ["\x01", "\x02", "\x03"]
  assert re.match(r"[\u0001-\U00000003]", "\x00\x01\x02\x03\x04", re.G) == ["\x01", "\x02", "\x03"]
  assert re.match(r"[\u6211-\U0002F894]", "中文測試弢", re.G+re.U) == ["文", "測", "試", "弢"]
  assert re.match(r"[我-弢]", "中文測試", re.G+re.U) == ["文", "測", "試"]
  assert re.match(r"[中-文]", "中文測試", re.G+re.U) == ["中", "文"]
  assert re.match(r".*?", "a", re.G) == ["", ""]
  assert re.match(r".*?", "abc", re.G) == ["", "", "", ""]
  assert re.match(r"(?:abc)*", "abc|abc", re.G) == ["abc", "abc"]
  assert re.range(r"\<", "|a|b|", re.G) == [1..1, 3..3]
  assert re.range(r"\>", "|a|b|", re.G) == [2..2, 4..4]
  assert re.range(r"\B", "|a|b|", re.G) == [0..0, 5..5]
end

def test9
  assert re.split(r",", "a,b,c") == ["a", "b", "c"]
  assert re.split(r"\d+", "00232this02939is39an22example111") == ["", "this", "is", "an", "example", ""]
  assert re.split(r"\s*:\s*", "AAA :   : BBB") == ["AAA", "", "BBB"]
  assert re.split(r",", "") == [""]
  assert re.split(r",", ",,") == ["", "", ""]
  assert re.split(r"", "abc") == ["a", "b", "c"]
  assert re.split(r"", "ab") == ["a", "b"]
  assert re.split(r" ", "a b") == ["a", "b"]
  assert re.split(r",", ",a,Ϊ,Ⓐ,弢,", re.U) == ["", "a", "Ϊ", "Ⓐ", "弢", ""]
  assert re.split(r"\xAF", "弢", re.U) == ["弢"]
  assert re.split(r"\d+", "11a22Ϊ33Ⓐ44弢55", re.U) == ["", "a", "Ϊ", "Ⓐ", "弢", ""]
  assert re.split(r"\W+", "Words, words, words.") == ["Words", "words", "words", ""]
  assert re.split(r"[a-fA-F]+", "0a3B9") == ["0", "3", "9"]
  assert re.split(r" ", "1 2 3 4 5 6 ") == ["1", "2", "3", "4", "5", "6", ""]
  assert re.split(r" ", "1  2  ") == ["1", "", "2", "", ""]
  assert re.split(r" ", "1 2") == ["1", "2"]
  assert re.split(r"foo", "foo") == ["", ""]
  assert re.split(r"foo", "") == [""]
  assert re.split(r"foo", "bar") == ["bar"]
  assert re.split(r"", "abcd", 0, 2) == ["a", "b", "cd"]
  assert re.split(r"", "中文測試", re.U, 2) == ["中", "文", "測試"]
  assert re.split(r"", "中文") == ["\xE4", "\xB8", "\xAD", "\xE6", "\x96", "\x87"]
  assert re.split(r"", "中文", re.U) == ["中", "文"]
  assert re.split(r"\W+", "a,b;c:d/e") == ["a", "b", "c", "d", "e"]
end

def test10
  assert re.replace(r"(a)", "a", fn (s0, s1) return "m($s1)" end) == "m(a)"
  assert re.replace(r"(a)", "a", fn (s0, s1) return "m($s1) m($s1)" end) == "m(a) m(a)"
  assert re.replace(r"(a*)", "aaa", fn (s0, s1) return "m($s1)" end) == "m(aaa)"
  assert re.replace(r"(a(b)c)", "abc", fn (s0, s1, s2) return "m($s1) m($s2)" end) == "m(abc) m(b)"
  assert re.replace(r"(a(b))(c)", "abc", fn (s0, s1, s2, s3) return "m($s1) m($s2) m($s3)" end) == "m(ab) m(b) m(c)"
  assert re.replace(r"(abc)*", "abcabc", fn (s0, s1) return "m($s1)" end) == "m(abc)"
  assert re.replace(r"(abc*)", "abcabc", fn (s0, s1) return "m($s1)" end) == "m(abc)m(abc)"
  assert re.replace(r"(abc)", "abcabc", fn (s0, s1) return "m($s1)" end) == "m(abc)m(abc)"
  assert re.replace(r"(abc)", "abcab", fn (s0, s1) return "m($s1)" end) == "m(abc)ab"
  assert re.replace(r"((abc)*)", "abcabc", fn (s0, s1, s2) return "m($s1) m($s2)" end) == "m(abcabc) m(abc)"
  assert re.replace(r"((a)bc)*", "abcabc", fn (s0, s1, s2) return "m($s1) m($s2)" end) == "m(abc) m(a)"
  assert re.replace(r"(b)", "abc", fn (s0, s1) return "m($s1)" end) == "am(b)c"
  assert re.replace(r"d", "abc", fn (s0, s1) return "m($s1)" end) == "abc"
  assert re.replace(r"(d)", "abc", fn (s0, s1) return "m($s1)" end) == "abc"
  assert re.replace(r"a", "aaa", "b") == "bbb"
  assert re.replace(r"a", "aaa", "b", 0, 1) == "baa"
end

test1()
test2()
test3()
test4()
test5()
test6()
test7()
test8()
test9()
test10()

print('All TESTS PASSED')
